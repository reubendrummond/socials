generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id           Int        @id @default(autoincrement())
  uid          String     @unique
  username     String     @unique
  email        String
  displayName  String
  bio          String?
  registeredAt DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  role         Role       @default(USER)
  posts        Post[]     @relation("userPosts")
  comments     Comment[]  @relation("userComments")
  reactions    Reaction[] @relation("userReactions")
  repliesTo    Comment[]  @relation("repliesTo")
}

model Post {
  id        Int        @id @default(autoincrement())
  title     String?
  body      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  authorId  Int
  reactions Reaction[] @relation("postReactions")
  comments  Comment[]  @relation("postComments")
  author    User       @relation(name: "userPosts", fields: [authorId], references: [id])
}

model Reaction {
  id     Int       @id @default(autoincrement())
  type   Reactions @default(LIKE)
  postId Int
  userId Int
  user   User      @relation(name: "userReactions", fields: [userId], references: [id])
  post   Post      @relation(name: "postReactions", fields: [postId], references: [id])
}

model Comment {
  id          Int       @id @default(autoincrement())
  body        String
  userId      Int
  postId      Int
  replyId     Int?
  replyUserId Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(name: "userComments", fields: [userId], references: [id])
  post        Post      @relation(name: "postComments", fields: [postId], references: [id])
  reply       Comment?  @relation("commentReplies", fields: [replyId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  replyTo     User?     @relation("repliesTo", fields: [replyUserId], references: [id])
  replies     Comment[] @relation("commentReplies")
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

enum Reactions {
  LIKE
  ANGRY
  LOL
}
